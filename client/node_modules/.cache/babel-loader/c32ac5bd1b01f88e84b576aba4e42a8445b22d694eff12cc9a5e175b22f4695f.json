{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kuku\\\\Desktop\\\\reactBogus\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={()=>props.onClick()}>\n//       {props.value}\n//     </button>\n//   )\n// }\n\n// class Board extends React.Component {  \n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       board: Array(9).fill(null),\n//       xTurn: true,\n//     }\n//     this.board = Array(9).fill(null);\n//     this.xTurn = true;\n//   }\n\n//   renderSquare(i) {\n//     return (\n//       <Square \n//         value={this.state.board[i]} \n//         onClick={() => this.doClick(i)}\n//       />\n//     );\n//   }\n\n//   postBoard(board = Array(9).fill(null)) {\n//     const requestContent = {\n//       method: 'POST',\n//       headers: {'Content-Type': 'application/json'},\n//       body: JSON.stringify({\n//         board: this.state.board,\n//         xTurn: !this.state.xTurn,\n//       }),\n//     };\n\n//     fetch('/board', requestContent)\n//       .then((res) => res.json())\n//       .then((data) => console.log(data));\n//   }\n\n//   getBoard() {\n//     fetch('/board')\n//     .then((res) => res.json())\n//     .then((board) => this.updateBoard(board));\n//   }\n\n//   updateBoard(newBoard) {\n//     console.log(newBoard);\n//     this.setState({\n//       board: newBoard,\n//     });\n//   }\n\n//   doClick(i) {\n//     const squares = this.board.slice();\n//     squares[i] = this.xTurn ? 'X' : 'O';\n//     this.board = squares.slice();\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div className='board-row'>\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className='board-row'>\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className='board-row'>\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//         <button onClick={() => this.postBoard()}>Submit Move</button>\n//         <button onClick={() => this.getBoard()}>Refresh Board</button>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null),\n//       }],\n//       stepNum: 0,\n//       xTurn: true,\n//     }\n//   }\n\n//   doClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNum + 1);\n//     const current = history[history.length -1];\n//     const squares = current.squares.slice();\n//     if(calcWinner(squares) || squares[i]) return;\n\n//     squares[i] = this.state.xTurn ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares,\n//       }]),\n//       stepNum: history.length,\n//       xTurn: !this.state.xTurn,\n//     });\n//   }\n\n//   jumpTo(step) {\n//     this.setState({\n//       stepNum: step,\n//       xTurn: (step % 2) === 0,\n//     });\n//   }\n\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNum];\n//     const winner = calcWinner(current.squares);\n\n//     const moves = history.map((step, move) => {\n//       const desc = move ? 'Go to move #' + move : 'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       )\n//     });\n\n//     let status;\n//     if (winner) {\n//       status = winner + ' has won!';\n//     }\n//     else {\n//       status = 'Next player: ' + (this.state.xTurn ? 'X' : 'O');\n//     }\n\n//     return (\n//       <div className='game'>\n//         <div className='game-board'>\n//           <Board\n//             squares={current.squares}\n//             onClick={(i) => this.doClick(i)}\n//           />\n//         </div>\n//         <div className='game-info'>\n//           <div>{status}</div>\n//           <ol>{moves}</ol> \n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function calcWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for(let a = 0; a < lines.length; a++) {\n//     const [x, y, z] = lines[a];\n//     if (squares[x] && squares[x] === squares[y] && squares[x] === squares[z]) {\n//       return squares[x];\n//     }\n//   }\n//   return null;\n// }\n\n// function App(root) {\n//   return <Game/>;\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DB extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"db\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Establish Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction App() {\n  _s();\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    fetch('/api').then(res => res.json()).then(data => setData(data.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: !data ? 'Loading...' : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DB, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","DB","Component","render","App","data","setData","useState","useEffect","fetch","then","res","json","message"],"sources":["C:/Users/Kuku/Desktop/reactBogus/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={()=>props.onClick()}>\n//       {props.value}\n//     </button>\n//   )\n// }\n\n// class Board extends React.Component {  \n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       board: Array(9).fill(null),\n//       xTurn: true,\n//     }\n//     this.board = Array(9).fill(null);\n//     this.xTurn = true;\n//   }\n  \n//   renderSquare(i) {\n//     return (\n//       <Square \n//         value={this.state.board[i]} \n//         onClick={() => this.doClick(i)}\n//       />\n//     );\n//   }\n\n//   postBoard(board = Array(9).fill(null)) {\n//     const requestContent = {\n//       method: 'POST',\n//       headers: {'Content-Type': 'application/json'},\n//       body: JSON.stringify({\n//         board: this.state.board,\n//         xTurn: !this.state.xTurn,\n//       }),\n//     };\n  \n//     fetch('/board', requestContent)\n//       .then((res) => res.json())\n//       .then((data) => console.log(data));\n//   }\n  \n//   getBoard() {\n//     fetch('/board')\n//     .then((res) => res.json())\n//     .then((board) => this.updateBoard(board));\n//   }\n  \n//   updateBoard(newBoard) {\n//     console.log(newBoard);\n//     this.setState({\n//       board: newBoard,\n//     });\n//   }\n\n//   doClick(i) {\n//     const squares = this.board.slice();\n//     squares[i] = this.xTurn ? 'X' : 'O';\n//     this.board = squares.slice();\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div className='board-row'>\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className='board-row'>\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className='board-row'>\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//         <button onClick={() => this.postBoard()}>Submit Move</button>\n//         <button onClick={() => this.getBoard()}>Refresh Board</button>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null),\n//       }],\n//       stepNum: 0,\n//       xTurn: true,\n//     }\n//   }\n  \n//   doClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNum + 1);\n//     const current = history[history.length -1];\n//     const squares = current.squares.slice();\n//     if(calcWinner(squares) || squares[i]) return;\n\n//     squares[i] = this.state.xTurn ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares,\n//       }]),\n//       stepNum: history.length,\n//       xTurn: !this.state.xTurn,\n//     });\n//   }\n\n//   jumpTo(step) {\n//     this.setState({\n//       stepNum: step,\n//       xTurn: (step % 2) === 0,\n//     });\n//   }\n\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNum];\n//     const winner = calcWinner(current.squares);\n\n//     const moves = history.map((step, move) => {\n//       const desc = move ? 'Go to move #' + move : 'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       )\n//     });\n\n//     let status;\n//     if (winner) {\n//       status = winner + ' has won!';\n//     }\n//     else {\n//       status = 'Next player: ' + (this.state.xTurn ? 'X' : 'O');\n//     }\n\n//     return (\n//       <div className='game'>\n//         <div className='game-board'>\n//           <Board\n//             squares={current.squares}\n//             onClick={(i) => this.doClick(i)}\n//           />\n//         </div>\n//         <div className='game-info'>\n//           <div>{status}</div>\n//           <ol>{moves}</ol> \n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function calcWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for(let a = 0; a < lines.length; a++) {\n//     const [x, y, z] = lines[a];\n//     if (squares[x] && squares[x] === squares[y] && squares[x] === squares[z]) {\n//       return squares[x];\n//     }\n//   }\n//   return null;\n// }\n\n// function App(root) {\n//   return <Game/>;\n// }\n\n// export default App;\n\n\n\nclass DB extends React.Component {\n  render() {\n    return (\n      <div id='db'>\n        <button>Establish Connection</button>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch('/api')\n    .then((res) => res.json())\n    .then((data) => setData(data.message));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <p>\n          {!data ? 'Loading...' : data}\n        </p>\n        <DB />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAEloBACE;MAAK,EAAE,EAAC,IAAI;MAAA,uBACV;QAAA,UAAQ;MAAoB;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACjC;EAEV;AACF;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAAC;EAE5CR,KAAK,CAACS,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,MAAM,CAAC,CACZC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEL,IAAI,IAAKC,OAAO,CAACD,IAAI,CAACQ,OAAO,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAK,GAAG,EAAEb,IAAK;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD;QAAA,WAAG,OACI;UAAA,UAAM;QAAU;UAAA;UAAA;UAAA;QAAA,QAAO,wBAC9B;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACJ;QACE,SAAS,EAAC,UAAU;QACpB,IAAI,EAAC,qBAAqB;QAC1B,MAAM,EAAC,QAAQ;QACf,GAAG,EAAC,qBAAqB;QAAA,UAC1B;MAED;QAAA;QAAA;QAAA;MAAA,QAAI,eACJ;QAAA,UACG,CAACK,IAAI,GAAG,YAAY,GAAGA;MAAI;QAAA;QAAA;QAAA;MAAA,QAC1B,eACJ,QAAC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA/BQD,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}